<script>
// ===== словари =====
const front = { /* …всё как у вас… */ 
  1: "Что такое сайты и как они работают? - Узнал как работают веб-сайты в интернете и каким образом они отображаются в браузере",
  2: "Разберем простой сайт - Разобрал как устроены сайты на реальном примере",
  3: 'Создание первого сайта, базовая структура скелета - Изучил базовую структуру сайта, разобрал новый термин "теги", благодаря которым можно встраивать различные элементы на сайт',
  4: "Работа со стилями - Научился добавлять базовые стили на сайт, например менять им фоновый цвет, размеры",
  5: "Структура HTML - Более подробно изучил структуру HTML - файлов",
  6: "Основные теги в HTML #1 - Изучил новые теги, благодаря которым вставляются картинки и различного вида текст (зачеркнутый, подчеркнутый и другие)",
  7: "Основные теги в HTML #2 - Научился добавлять тегам атрибуты, которые позволяют редактировать свойства элементов",
  8: "Основные теги в HTML #3 - Изучил все необходимые теги для создания таблиц на сайтах. Закрепил изученное на практике",
  9: "Начало работы со стилями - Начал изучать работу с CSS, который отвечает за оформление сайта. Узнал что такое классы и айди, для чего они используются и как правильно применять стили для элементов",
  10: "Отступы и размеры элементов сайта - Узнал, как задавать внутренние и внешние отступы для элементов, ознакомился с особенностями и различиями данных свойств",
  11: "Работа с цветами - Ознакомился со всеми возможными способами обозначения цвета в коде.Научился правильно работать с цветами, сочетать их и создавать градиенты",
  12: "Работа со шрифтами - Узнал, какие существуют шрифты и как они влияют на наш сайт. Научился подключать сторонние шрифты на сайт двумя основными способами",
  13: "Работа с фоном - Узнал как ставить на фон изображение или сплошной цвет. Научился контролировать размеры, отображение и расположение фона",
  14: "Работа с блоками - Узнал, для чего нужны блоки на сайте, как их создавать и правильно позиционировать",
  15: "Работа с FlexBox - Изучил инструмент FlexBox, который предоставляет способ позиционирования элементов. Научился контролировать порядок элементов, выравнивание по нескольким осям, размеры, а также распределение свободного места между ними",
  16: "Создание второго сайта - Создал свой второй сайт с дизайном, закрепив все изученные темы ранее",
  17: "Как правильно писать сайты (семантика) - Узнал, что такое правильный код. Познакомился с понятием семантика, знает как проверять сайт на ошибки и исправлять их.",
  18: "Практика #1 - Практическое занятие. Создал структуру кода для сайта",
  19: "Практика #2 - Практическое занятие. Научился создавать шапочку сайта с навигацией в виде ссылок",
  20: "Практика #3 - Практическое занятие. Познакомился с понятием секции, создал приветственную секцию - Welcome",
  21: "Практика #4 - Практическое занятие. Создал новые контейнеры на сайте в виде карточек предоставляемых услуг",
  22: "Input как работать с формами - Научился создавать форму с различными полями ввода на сайте, ознакомился с особенностями ее стилизации",
  23: "Практика #5 - Практическое занятие. Добавил работающую форму на свой сайт",
  24: "Практика #6 - Практическое занятие. Узнал, что такое подвал сайта и добавил его к себе на сайт",
  25: 'Адаптация сайта - Познакомился с понятием "адаптация сайта", узнал об ее особенностях и синтаксисе',
  26: "Проверяем наш сайт и улучшаем его (адаптация) - Практическое занятие. Адаптировал свой сайт под мобильные устройства и планшеты",
  27: "Медиа запросы. Адаптация сайта №1 - Узнал, что такое медиа-запросы. Добавил медиа-запросы к себе на сайт, адаптировал несколько секций под различные устройства",
  28: "Адаптация сайта №2 - Практическое занятие. Продолжил адаптацию сайта, адаптировал карточки и оставшиеся секции под различные устройства",
  29: "Адаптация сайта №3 - Практическое занятие. Закончил адаптацию сайта, изменил шапочку сайта под мобильную версию",
  30: "Псевдокласс hover - Познакомился с псевдоклассами, научился использовать псевдокласс hover, который срабатывает при наведении на элемент, на практике",
  31: "Переходы CSS - Научился добавлять плавные переходы в CSS, знает как контролировать их скорость и продолжительность",
  32: "Как работать с Figma - Введение в дизайн. Знакомство с графическим редактором Figma",
  33: "Переносим сайт на Figma #1 - Научился работать с Figma. Узнал, как смотреть на свойства элемента, скачивать необходимые изображения, декоративные элементы и переносить его к себе на сайт",
  34: "Переносим сайт на Figma #2 - Практическое занятие. Работа с Figma, перенос сайта с макета в код",
  35: "Переносим сайт на Figma #3 - Практическое занятие. Работа с Figma, перенос сайта с макета в код",
  36: "Переносим сайт на Figma #4 - Практическое занятие. Работа с Figma, перенос сайта с макета в код",
  37: "Защитный проект - Доработал свой защитный проект по модулю Figma",
  38: "Что такое Tilda? - Познакомился с конструктором сайтов Tilda...",
  39: "Как Tilda изменила мир программирования - ...",
  40: "Шаблоны и мобильная адаптация - ...",
  41: "Создаем сайт для музыкального телеграм канала - ...",
  42: "ZERO BLOCK - начальный уровень - ...",
  43: "ZERO BLOCK - продвинутый уровень - ...",
  44: "Основы дизайна - ...",
  45: "Создание сайта - каталог для обувного магазина - ...",
  46: 'Типографика и продающий текст - ...',
  47: "Создаем стильный сайт для магазина мужской одежды - ...",
  48: "TILDA - защитный проект - ...",
  49: "Что такое JavaScript? - ...",
  50: "Библиотека JQuery - ...",
  51: "Обработка событий JavaScript - ...",
  52: "Работа с DOM - ...",
  53: "Отображение и скрытие элементов - ...",
  54: "Модальное окно - ...",
  55: "JavaScript Переменные - ...",
  56: "JavaScript Типы данных - ...",
  57: "JS операторы и условные операторы IF/ELSE - ...",
  58: "JavaScript циклы - ...",
  59: "JavaScript массивы - ...",
  60: "JavaScript функции - ...",
  61: "JavaScript функции №2 - ...",
  62: "JavaScript DOM - ..."
};
const scratch = { /* …как у вас… */ 
  1: "Основы Scratch. Часть 1 - ...",
  // ... до 36
  36: "Проектная работа на закрепление пятого модуля."
};
const python = { /* …как у вас… */ 
  1: "Знакомство с Python - ...",
  // ... до 57
  57: "EXE - Научился запускать свою игру на других компьютерах",
};
const frontpro = { /* …как у вас… */ 1:"Введение в JS - ...", /* …до 72… */ 72:"Часть 4 - ...", };
const roblox = { /* …как у вас… */ 1:"Твоя первая гоночная трасса - ...", /* …до 32… */ 32:"Система монет за киллы - ..." };

// ===== служебные функции, связанные с посещаемостью/дз =====
function attendanceInfo(lessons, attendance) {
  const context = {
    good: "Хотим поделиться хорошей новостью: ваш ребенок имеет отличную посещаемость наших уроков программирования. Это замечательно, и ваша поддержка играет важную роль в успехе.",
    mid: "Хотим обратить ваше внимание на то, что посещаемость наших уроков программирования является хорошей, но не отличной. С нашей стороны мы предоставим вам бесплатные дополнительные занятия, вам необходимо будет указать время и дни для комфортного прохождения данных уроков.",
    low: "Хотели бы обратить ваше внимание на посещаемость уроков вашего ребенка. К сожалению, она несколько ниже желаемой. Важно помнить, что регулярное участие на уроках играет ключевую роль в успехе обучения. С нашей стороны мы предоставим вам бесплатные дополнительные занятия, вам необходимо будет указать время и дни для комфортного прохождения данных уроков.",
  };
  let percentage = 0;
  if (attendance !== 0 && lessons !== 0) percentage = (attendance / lessons) * 100;
  if (percentage > 79) return context.good;
  if (percentage >= 50) return context.mid;
  return context.low;
}

function homeworksInfo(homeworksOverall, homeworksTurned) {
  const context = {
    good: "Ребенок продемонстрировал отличную успеваемость.Это великолепное достижение! Пожалуйста, продолжайте вдохновлять и поддерживать его в его образовательном путешествии.",
    mid: "Успеваемость вашего ребенка находится на среднем уровне. Это означает, что есть потенциал для улучшения...",
    low: "На данный момент успеваемость оставляет желать лучшего. Мы понимаем, что учебные трудности могут возникать у каждого ребенка..."
  };
  let percentage = 0;
  if (homeworksOverall !== 0) {
    try { percentage = (homeworksTurned / homeworksOverall) * 100; } catch { percentage = 0; }
    if (percentage > 79) return context.good;
    if (percentage >= 50) return context.mid;
    return context.low;
  }
  return context.low;
}

// ===== чтение параметров из URL =====
const fullUrl = window.location.href;
const paramsObject = {};
const queryString = fullUrl.split("?")[1];
if (queryString) {
  queryString.split("&").forEach((param) => {
    const [key, value] = param.split("=");
    paramsObject[decodeURIComponent(key)] = decodeURIComponent(value);
  });
}

// ===== исходные данные отчёта =====
const reportData = {
  full_name: paramsObject["3"],
  attendance: paramsObject["5"],
  lessons: paramsObject["4"],
  homeworks_turned: paramsObject["7"],
  homeworks_overall: paramsObject["6"],
  month: paramsObject["m"],
};

reportData.attendance_info = attendanceInfo(paramsObject["4"], paramsObject["5"]);
reportData.homeworks_info = homeworksInfo(paramsObject["6"], paramsObject["7"]);

// ===== что изучил =====
const lessons_list = paramsObject["8"]?.split(".,");
const lessons_cont = document.querySelector(".what_learned");
const mapLessonList = { фронт: front, скретч: scratch, питон: python, фронтпро: frontpro, роблокс: roblox };
const source = mapLessonList[lessons_list?.[0]] || {};
lessons_list?.slice(1).forEach((element) => {
  if (element && element.trim() !== " ") {
    const el = document.createElement("div");
    el.classList.add("lesson");
    el.innerText = source[parseInt(element)] ? `${element} урок. ${source[parseInt(element)]}` : element;
    lessons_cont.appendChild(el);
  }
});

// ===== навыки (skill map) =====
const exceptions = [
  "Сдает аттестацию",
  "Выполняет практические задания",
  "Работает над дипломным проектом",
  "Работает над проектом  Django",
  "Выполняет доп задания",
];
const finalStage = lessons_list?.slice(1).some((lesson) => exceptions.includes((lesson || "").trim()));
const mapLessonList2 = {
  фронт: [skillHashFront, 1, skillMapFront, 36],
  скретч: [skillHashScratch, 37, skillMapScratch, 59],
  питон: [skillHashPython, 60, skillMapPython, 112],
  фронтпро: [skillHashFrontpro, 113, skillMapFrontPro, 174],
  роблокс: [skillHashRoblox, 175, skillMapRoblox, 189],
};
const heighestLesson = lessons_list?.slice(1)[(lessons_list?.length || 1) - 2];
const source2 = mapLessonList2[lessons_list?.[0]];
let topSkill = 0;
try { topSkill = source2[2][parseInt(heighestLesson)]; } catch {}
if (finalStage) topSkill = source2?.[3];
let ids = "";
if (source2 && topSkill) {
  for (let index = source2[1]; index < topSkill - 1; index++) ids += String(index) + ";";
  ids += topSkill;
}
const newids = ids ? ids.split(";").map((id) => parseInt(id.trim())) : [];
const skills = newids.map((id) => source2[0][id]).filter(Boolean);
const skills_cont = document.querySelector(".skills");
skills.forEach((text) => {
  const el = document.createElement("div");
  el.classList.add("lesson");
  el.innerText = text;
  skills_cont.appendChild(el);
});

// ===== подстановка простых плейсхолдеров =====
document.body.innerHTML = document.body.innerHTML.replace(/\{\{\s*(\w+)\s*\}\}/g, (_, key) => reportData[key] || "");

// ===== сильные/слабые/рекомендации (из колонок 9/10/11) =====
// (требуются функции splitMulti и fillList из вашего кода)
const strengths = splitMulti(paramsObject["9"]);
const weaknesses = splitMulti(paramsObject["10"]);
const recs = splitMulti(paramsObject["11"]);
fillList(".strengths", strengths);
fillList(".weaknesses", weaknesses);
fillList(".recs", recs);

// ===== PDF =====
document.getElementById("downloadBtn").addEventListener("click", () => {
  const element = document.querySelector(".report");
  html2pdf().from(element).set({ pagebreak: { mode: ["css"] }, margin: [4, 0, 4, 0] })
    .save((paramsObject["3"]?.trim() || "Отчёт") + ".pdf");
});
</script>
